{:profiles
 {:Default {:default true
            :alone 300 ; hold for .. ms to register single tap
            :held 50
            :delay 0 ; time after which the key press is delayed
            :sim 30}} ;  keys need to be pressed within this threshold to be considered simultaneous
 :input-sources {:en-keyboard {:input_source_id "com.apple.keylayout.US"
                               :language "en"}}
 :simlayers {:a-mode {:key :a}
             :open-app-mode {:key :w}
             :ctrl-shift {:key :s}
             :d-mode {:key :d}
             :space-mode {:key :spacebar}}
 :devices {:work [{:vendor_id 1008 :product_id 842}]
           :laptop_keyboard [{:vendor_id 1452 :product_id 638} ;; work mbp
                             {:vendor_id 1452 :product_id 631} ;; home mbp
                             ]
           :keychron [{:vendor_id 1452 :product_id 592}]}



 :templates {:toggle "osascript @toggleApplicationPath@ \"%s\""
             :btt "osascript -e 'tell application \"BetterTouchTool\" to trigger_named_async_without_response \"%s\"'"}

 :main
 [{:des "Correct configruation for work HP keyboard" :rules [:work
                                                             [:##left_option :##left_command]
                                                             [:##left_command :##left_option]]}
  {:des "Capslock to cmd+ctrl+opt+shift" :rules [[:caps_lock :left_control nil {:alone :escape}]]}
  {:des "Swap left cmd for left control" :rules [:laptop_keyboard [:right_command :left_control]]}
  {:des "fn+åäö to åäö in non-swedish layout"
   :rules [[:!Fsemicolon [:!Ou :o] [:en-keyboard]] ;; fn+: => ö
           [:!SFsemicolon [:!Ou :!So] [:en-keyboard]] ;; fn+shift+: => Ö

           [:!Fquote [:!Ou :a] [:en-keyboard]] ;; fn+' => ä
           [:!SFquote [:!Ou :!Sa] [:en-keyboard]] ;; fn+shift+' => Ä

           [:!Fopen_bracket [:!Oa] [:en-keyboard]] ;; fn+[ => å
           [:!SFopen_bracket [:!SOa] [:en-keyboard]] ;; fn+shift+[ => Å
           ]}
  {:des "fn+[1-9] to F[1-9], fn+0 to F10, fn+Hyphen (-) to F11, fn+Equal Sign (=) to F12"
   :rules [[:!F##1 :f1]
           [:!F##2 :f2]
           [:!F##3 :f3]
           [:!F##4 :f4]
           [:!F##5 :f5]
           [:!F##6 :f6]
           [:!F##7 :f7]
           [:!F##8 :f8]
           [:!F##9 :f9]
           [:!F##0 :f10]
           [:!F##hyphen :f11]
           [:!F##equal_sign :f12]]}
  {:des "a any+[hjkl] for arrows"
   :rules [[:##h :left_arrow :a-mode]
           [:##j :down_arrow :a-mode]
           [:##k :up_arrow :a-mode]
           [:##l :right_arrow :a-mode]
           [:d :!Odown_arrow :a-mode]
           [:u :!Oup_arrow :a-mode]
           [:o :return_or_enter :a-mode]
           [:m :page_down :a-mode]
           [:comma :page_up :a-mode]
           [:e :!Cright_arrow :a-mode]
           [:b :!Cleft_arrow :a-mode]]}

  {:des "Move ` key to above tab in swedish keyboard"
   :rules [:laptop_keyboard
           [:##non_us_backslash :##grave_accent_and_tilde [:en-keyboard]] ;; Switch normal key above tab
           [:##grave_accent_and_tilde :##non_us_backslash [:en-keyboard]] ;; Switch normal to the right of left-shift
           ]}
  {:des "Map escape key to key above tab in keychron"
   :rules [:keychron
           [:##escape :##grave_accent_and_tilde]]}
  {:des "s to cmd+shift"
   :rules [:en-keyboard :ctrl-shift
           [:j :!CSopen_bracket]
           [:k :!CSclose_bracket]
           [:0 :play_or_pause]
           [:hyphen :volume_decrement]
           [:equal_sign :volume_increment]]}
  {:des "left_control to fn in keychron" ;; in lack of a fn key on left side
   :rules [[:left_control :fn [:keychron]]]}
  {:des "Show/hi(D)e applications"
   :rules [:open-app-mode
           [:j [:toggle "Firefox"]]
           [:k [:toggle "kitty"]]
           [:u [:toggle "Telegram"]]
           [:s [:toggle "Spotify"]]
           [:t [:toggle "TickTick"]]
           [:semicolon [:toggle "Teams"]]
           [:p [:toggle "Obsidian"]]
           [:o [:toggle "Mail"]]
           [:m [:toggle "Calendar"]]
           [:d [:toggle "Discord"]]]}
  {:des "bracket sequences"
   :rules [:d-mode
           [:j :!S9]
           [:k :!S0]
           [:i :open_bracket]
           [:o :close_bracket]
           [:m :!Sopen_bracket]
           [:comma :!Sclose_bracket]]}
  {:des "bracket sequences"
   :rules [:space-mode
           [:o :return_or_enter]]}]}
